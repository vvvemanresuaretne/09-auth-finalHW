{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/api/api.ts"],"sourcesContent":["\nimport axios from \"axios\";\n\nconst baseURL = process.env.NEXT_PUBLIC_API_URL + \"/api\";\n\nexport const nextServer = axios.create({\n  baseURL,\n  withCredentials: true,\n});"],"names":[],"mappings":";;;AACA;;AAEA,MAAM,UAAU,8EAAkC;AAE3C,MAAM,aAAa,6IAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACrC;IACA,iBAAiB;AACnB"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/api/serverApi.ts"],"sourcesContent":["import { nextServer } from \"./api\";\nimport { cookies } from \"next/headers\";\nimport type { Note, NotesResponse } from \"@/types/note\";\nimport type { User } from \"@/types/user\";\n\n\n\nconst getCookieHeader = async () => {\n  const cookieStore = cookies();\n  return cookieStore.toString();\n};\n\nexport const fetchNotesServer = async (\n  searchText: string,\n  page = 1,\n  perPage = 10,\n  tag?: string\n): Promise<NotesResponse> => {\n  const cookie = await getCookieHeader();\n  const res = await nextServer.get<NotesResponse>(\"/notes\", {\n    params: {\n      ...(searchText && { search: searchText }),\n      page,\n      perPage,\n      ...(tag && tag !== \"All\" && { tag }),\n    },\n    headers: {\n      Cookie: cookie,\n    },\n  });\n  return res.data;\n};\n\nexport const fetchNoteByIdServer = async (id: string): Promise<Note> => {\n  const cookie = await getCookieHeader();\n  const res = await nextServer.get<Note>(`/notes/${id}`, {\n    headers: {\n      Cookie: cookie,\n    },\n  });\n  return res.data;\n};\n\nexport const getUserFromServer = async (): Promise<User> => {\n  const cookie = await getCookieHeader();\n  const res = await nextServer.get<User>(\"/users/me\", {\n    headers: {\n      Cookie: cookie,\n    },\n  });\n  return res.data;\n};\n\nexport const checkServerSession = async () => {\n  const cookie = await getCookieHeader();\n  return await nextServer.get(\"/auth/session\", {\n    headers: {\n      Cookie: cookie,\n    },\n  });\n};\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;;;AAMA,MAAM,kBAAkB;IACtB,MAAM,cAAc,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD;IAC1B,OAAO,YAAY,QAAQ;AAC7B;AAEO,MAAM,mBAAmB,OAC9B,YACA,OAAO,CAAC,EACR,UAAU,EAAE,EACZ;IAEA,MAAM,SAAS,MAAM;IACrB,MAAM,MAAM,MAAM,yHAAA,CAAA,aAAU,CAAC,GAAG,CAAgB,UAAU;QACxD,QAAQ;YACN,GAAI,cAAc;gBAAE,QAAQ;YAAW,CAAC;YACxC;YACA;YACA,GAAI,OAAO,QAAQ,SAAS;gBAAE;YAAI,CAAC;QACrC;QACA,SAAS;YACP,QAAQ;QACV;IACF;IACA,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,sBAAsB,OAAO;IACxC,MAAM,SAAS,MAAM;IACrB,MAAM,MAAM,MAAM,yHAAA,CAAA,aAAU,CAAC,GAAG,CAAO,CAAC,OAAO,EAAE,IAAI,EAAE;QACrD,SAAS;YACP,QAAQ;QACV;IACF;IACA,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,oBAAoB;IAC/B,MAAM,SAAS,MAAM;IACrB,MAAM,MAAM,MAAM,yHAAA,CAAA,aAAU,CAAC,GAAG,CAAO,aAAa;QAClD,SAAS;YACP,QAAQ;QACV;IACF;IACA,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,qBAAqB;IAChC,MAAM,SAAS,MAAM;IACrB,OAAO,MAAM,yHAAA,CAAA,aAAU,CAAC,GAAG,CAAC,iBAAiB;QAC3C,SAAS;YACP,QAAQ;QACV;IACF;AACF"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["// middleware.ts\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { cookies } from 'next/headers';\nimport { parse } from 'cookie';\nimport { checkServerSession } from './lib/api/serverApi';\n\nconst privateRoutes = ['/profile', '/notes'];\nconst publicRoutes = ['/sign-in', '/sign-up'];\n\nexport async function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  const cookieStore = await cookies();\n  const accessToken = cookieStore.get('accessToken')?.value;\n  const refreshToken = cookieStore.get('refreshToken')?.value;\n\n  const isPublicRoute = publicRoutes.some((route) => pathname.startsWith(route));\n  const isPrivateRoute = privateRoutes.some((route) => pathname.startsWith(route));\n\n  if (!accessToken) {\n    if (refreshToken) {\n     \n      const data = await checkServerSession();\n      const setCookie = data.headers['set-cookie'];\n\n      if (setCookie) {\n        const cookieArray = Array.isArray(setCookie) ? setCookie : [setCookie];\n        for (const cookieStr of cookieArray) {\n          const parsed = parse(cookieStr);\n          const options = {\n            expires: parsed.Expires ? new Date(parsed.Expires) : undefined,\n            path: parsed.Path,\n            maxAge: Number(parsed['Max-Age']),\n          };\n          if (parsed.accessToken) cookieStore.set('accessToken', parsed.accessToken, options);\n          if (parsed.refreshToken) cookieStore.set('refreshToken', parsed.refreshToken, options);\n        }\n        \n        if (isPublicRoute) {\n          return NextResponse.redirect(new URL('/', request.url), {\n            headers: {\n              Cookie: cookieStore.toString(),\n            },\n          });\n        }\n       \n        if (isPrivateRoute) {\n          return NextResponse.next({\n            headers: {\n              Cookie: cookieStore.toString(),\n            },\n          });\n        }\n      }\n    }\n   \n    if (isPublicRoute) {\n      return NextResponse.next();\n    }\n\n    \n    if (isPrivateRoute) {\n      return NextResponse.redirect(new URL('/sign-in', request.url));\n    }\n  }\n\n  \n  if (isPublicRoute) {\n    return NextResponse.redirect(new URL('/', request.url));\n  }\n \n  if (isPrivateRoute) {\n    return NextResponse.next();\n  }\n}\n\nexport const config = {\n  matcher: ['/profile/:path*','/notes/:path*', '/sign-in', '/sign-up'],\n};\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAEhB;AAAA;AACA;AAAA;AACA;AACA;;;;;AAEA,MAAM,gBAAgB;IAAC;IAAY;CAAS;AAC5C,MAAM,eAAe;IAAC;IAAY;CAAW;AAEtC,eAAe,WAAW,OAAoB;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,MAAM,cAAc,MAAM,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD;IAChC,MAAM,cAAc,YAAY,GAAG,CAAC,gBAAgB;IACpD,MAAM,eAAe,YAAY,GAAG,CAAC,iBAAiB;IAEtD,MAAM,gBAAgB,aAAa,IAAI,CAAC,CAAC,QAAU,SAAS,UAAU,CAAC;IACvE,MAAM,iBAAiB,cAAc,IAAI,CAAC,CAAC,QAAU,SAAS,UAAU,CAAC;IAEzE,IAAI,CAAC,aAAa;QAChB,IAAI,cAAc;YAEhB,MAAM,OAAO,MAAM,CAAA,GAAA,+HAAA,CAAA,qBAAkB,AAAD;YACpC,MAAM,YAAY,KAAK,OAAO,CAAC,aAAa;YAE5C,IAAI,WAAW;gBACb,MAAM,cAAc,MAAM,OAAO,CAAC,aAAa,YAAY;oBAAC;iBAAU;gBACtE,KAAK,MAAM,aAAa,YAAa;oBACnC,MAAM,SAAS,CAAA,GAAA,+IAAA,CAAA,QAAK,AAAD,EAAE;oBACrB,MAAM,UAAU;wBACd,SAAS,OAAO,OAAO,GAAG,IAAI,KAAK,OAAO,OAAO,IAAI;wBACrD,MAAM,OAAO,IAAI;wBACjB,QAAQ,OAAO,MAAM,CAAC,UAAU;oBAClC;oBACA,IAAI,OAAO,WAAW,EAAE,YAAY,GAAG,CAAC,eAAe,OAAO,WAAW,EAAE;oBAC3E,IAAI,OAAO,YAAY,EAAE,YAAY,GAAG,CAAC,gBAAgB,OAAO,YAAY,EAAE;gBAChF;gBAEA,IAAI,eAAe;oBACjB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG,GAAG;wBACtD,SAAS;4BACP,QAAQ,YAAY,QAAQ;wBAC9B;oBACF;gBACF;gBAEA,IAAI,gBAAgB;oBAClB,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;wBACvB,SAAS;4BACP,QAAQ,YAAY,QAAQ;wBAC9B;oBACF;gBACF;YACF;QACF;QAEA,IAAI,eAAe;YACjB,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;QAC1B;QAGA,IAAI,gBAAgB;YAClB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,QAAQ,GAAG;QAC9D;IACF;IAGA,IAAI,eAAe;QACjB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,IAAI,gBAAgB;QAClB,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAkB;QAAiB;QAAY;KAAW;AACtE"}}]
}